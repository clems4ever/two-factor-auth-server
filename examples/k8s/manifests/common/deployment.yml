---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: authelia
  labels:
    app.kubernetes.io/instance: authelia
    app.kubernetes.io/name: authelia
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: authelia
      app.kubernetes.io/name: authelia
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: authelia
        app.kubernetes.io/name: authelia
    spec:
      containers:
        - name: authelia
          image: 'docker.io/authelia/authelia:v4.28.2'
          imagePullPolicy: IfNotPresent
          command:
            - authelia
          args:
            - '--config=/config/configuration.yml'
          ports:
            - name: http
              containerPort: 9091
              protocol: TCP
          env:
            - name: AUTHELIA_JWT_SECRET_FILE
              value: /config/secrets/JWT_TOKEN
            - name: AUTHELIA_SESSION_SECRET_FILE
              value: /config/secrets/SESSION_ENCRYPTION_KEY
            - name: AUTHELIA_AUTHENTICATION_BACKEND_LDAP_PASSWORD_FILE
              value: /config/secrets/LDAP_PASSWORD
            - name: AUTHELIA_NOTIFIER_SMTP_PASSWORD_FILE
              value: /config/secrets/SMTP_PASSWORD
            - name: AUTHELIA_STORAGE_POSTGRES_PASSWORD_FILE
              value: /config/secrets/STORAGE_PASSWORD
              # Uncomment if using DUO Push Auth
            # - name: AUTHELIA_DUO_API_SECRET_KEY_FILE
            #   value: /config/secrets/DUO_API_KEY
            # - name: TZ
            #   value:
          resources:
            limits:
              cpu: '4'
              memory: 125Mi
            requests:
              cpu: 250m
              memory: 50Mi
          volumeMounts:
            - name: config
              mountPath: /config
            - name: secrets
              readOnly: true
              mountPath: /config/secrets
            - name: certificates
              readOnly: true
              mountPath: /config/certificates
          livenessProbe:
            httpGet:
              path: /api/health
              port: http
              scheme: HTTP
            timeoutSeconds: 5
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /api/health
              port: http
              scheme: HTTP
            timeoutSeconds: 5
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          # startupProbe:
          #   httpGet:
          #     path: /api/health
          #     port: http
          #     scheme: HTTP
          #  initialDelaySeconds: 10
          #  timeoutSeconds: 5
          #   periodSeconds: 5
          #   successThreshold: 1
          #   failureThreshold: 6
      volumes:
        - name: config
          configMap:
            name: authelia
            items:
              - key: configuration.yml
                path: configuration.yml
        - name: secrets
          secret:
            secretName: authelia
            items:
              - key: JWT_TOKEN
                path: JWT_TOKEN
              - key: SESSION_ENCRYPTION_KEY
                path: SESSION_ENCRYPTION_KEY
              - key: STORAGE_PASSWORD
                path: STORAGE_PASSWORD
              - key: LDAP_PASSWORD
                path: LDAP_PASSWORD
              - key: SMTP_PASSWORD
                path: SMTP_PASSWORD
              # Uncomment if using DUO Push Auth
              # - key: DUO_API_KEY
              #   path: DUO_API_KEY
        - name: certificates
          secret:
            secretName: authelia-certificates
      securityContext: {}
      affinity:
        nodeAffinity: {}
        podAffinity: {}
        podAntiAffinity: {}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 5
...
